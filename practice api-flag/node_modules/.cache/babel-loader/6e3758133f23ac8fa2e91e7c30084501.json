{"ast":null,"code":"var _jsxFileName = \"/Users/rodolphebeloncle/Desktop/reactFromScratch/practice api-flag/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true);\n  const [rangeValue, setRangeValue] = useState(40);\n  const [selectedRadio, setSelectedRadio] = useState('');\n  const radios = ['Africa', \"America\", \"Asia\", \"Europe\", \"Oceania\"]; // fetch Data from Api request countries\n\n  useEffect(() => {\n    if (playOnce) {\n      axios.get('https://restcountries.com/v3.1/all').then(res => {\n        setData(res.data);\n        setPlayOnce(false);\n      });\n    }\n\n    const sortedCountry = () => {\n      // Transform an array in object from data Api\n      const countryObj = Object.keys(data).map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        // tries décroissant\n        return b.population - a.population;\n      });\n      sortedArray.length = rangeValue;\n      setSortedData(sortedArray);\n    };\n\n    sortedCountry();\n  }, [data, rangeValue, playOnce]); // => relaunch the useeffect if changed state\n  // NB child's components inherited from parent's component \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"40\",\n        value: rangeValue,\n        onChange: e => setRangeValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: radios.map(radio => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: radio,\n              id: radio,\n              checked: radio === selectedRadio,\n              onChange: e => setSelectedRadio(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"radio\",\n              children: radio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, radio, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cancel\",\n      children: [selectedRadio, /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"annuler recherche\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: sortedData.filter(country => country.region.includes(selectedRadio)).map(country =>\n      /*#__PURE__*/\n      // left country transfer to country's Card value right (props cards)\n      _jsxDEV(Cards, {\n        country: country\n      }, country.name[\"common\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Countries, \"cfUFEtKvSU444ZMIyJmiN0L2QaY=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/Users/rodolphebeloncle/Desktop/reactFromScratch/practice api-flag/src/components/Countries.js"],"names":["React","useEffect","useState","axios","Cards","Countries","data","setData","sortedData","setSortedData","playOnce","setPlayOnce","rangeValue","setRangeValue","selectedRadio","setSelectedRadio","radios","get","then","res","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","length","e","target","value","radio","filter","country","region","includes","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\n\nconst Countries = () => {\n    const [data,setData] = useState([]);\n    const [sortedData,setSortedData] = useState([])\n    const [playOnce,setPlayOnce] = useState(true);\n    const [rangeValue,setRangeValue] = useState(40);\n    const [selectedRadio,setSelectedRadio] = useState('')\n    const radios = ['Africa',\"America\",\"Asia\",\"Europe\",\"Oceania\"]\n\n    // fetch Data from Api request countries\n    useEffect(()=>{\n      if(playOnce){\n        axios\n        .get('https://restcountries.com/v3.1/all')\n        .then((res) =>  {\n        setData(res.data)\n        setPlayOnce(false)\n        });\n      }\n\n        const sortedCountry = () => {\n          // Transform an array in object from data Api\n          const countryObj = Object.keys(data).map((i) => data[i]);\n\n          const sortedArray = countryObj.sort((a,b) =>{\n            // tries décroissant\n            return b.population - a.population\n          });\n          sortedArray.length = rangeValue;\n          setSortedData(sortedArray)\n         \n        };\n        sortedCountry();\n        \n    },[data,rangeValue,playOnce]);// => relaunch the useeffect if changed state\n   \n    // NB child's components inherited from parent's component \n    return (\n      <div className=\"data-container\">\n        <div className=\"sort-container\">\n        <input type=\"range\" min=\"1\" max=\"40\" value={rangeValue}\n        onChange={(e)=> setRangeValue(e.target.value)}\n        />\n        <ul>\n          {radios.map(radio => {\n            return(\n            <li key={radio}>\n              <input \n              type=\"radio\" \n              value={radio} \n              id={radio}\n              checked={radio === selectedRadio} \n              onChange={(e)=> setSelectedRadio(e.target.value)}/>\n              <label htmlFor=\"radio\">{radio}</label>\n            </li>\n\n          );\n          })}\n        </ul>\n        </div>\n        <div className=\"cancel\">\n        {selectedRadio }\n          <h5>annuler recherche</h5>\n\n        </div>\n        <ul className=\"countries-list\">\n        {sortedData.filter((country) => country.region.includes(selectedRadio)).map((country) => (\n            // left country transfer to country's Card value right (props cards)\n           <Cards key={country.name[\"common\"]} country={country}/>\n           \n        ))}\n        </ul>\n      </div>\n            \n    );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}