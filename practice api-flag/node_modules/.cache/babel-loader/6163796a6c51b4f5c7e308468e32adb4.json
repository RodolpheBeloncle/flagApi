{"ast":null,"code":"var _jsxFileName = \"/Users/rodolphebeloncle/Desktop/reactFromScratch/practice api-flag/src/components/Countries.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countries = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [playOnce, setPlayOnce] = useState(true); // fetch Data from Api request countries\n\n  useEffect(() => {\n    if (playOnce) {\n      axios.get('https://restcountries.com/v3.1/all').then(res => {\n        setData(res.data);\n        set;\n      });\n    }\n\n    const sortedCountry = () => {\n      // Transform an array in object from data Api\n      const countryObj = Object.keys[data].map(i => data[i]);\n      const sortedArray = countryObj.sort((a, b) => {\n        // tries décroissant\n        return b.population - a.population;\n      });\n    };\n  }, [data]); // NB child's components inherited from parent's component \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"countries-list\",\n      children: data.map(country =>\n      /*#__PURE__*/\n      // left country transfer to country's Card value right (props cards)\n      _jsxDEV(Cards, {\n        country: country\n      }, country.name[\"common\"], false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Countries, \"2EIN0jwJ2trpSGRtp5ilp1n9QJQ=\");\n\n_c = Countries;\nexport default Countries;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"sources":["/Users/rodolphebeloncle/Desktop/reactFromScratch/practice api-flag/src/components/Countries.js"],"names":["React","useEffect","useState","axios","Cards","Countries","data","setData","sortedData","setSortedData","playOnce","setPlayOnce","get","then","res","set","sortedCountry","countryObj","Object","keys","map","i","sortedArray","sort","a","b","population","country","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACM,UAAD,EAAYC,aAAZ,IAA6BP,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACQ,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,IAAD,CAAvC,CAHoB,CAKpB;;AACAD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGS,QAAH,EAAY;AACVP,MAAAA,KAAK,CACJS,GADD,CACK,oCADL,EAECC,IAFD,CAEOC,GAAD,IAAU;AAChBP,QAAAA,OAAO,CAACO,GAAG,CAACR,IAAL,CAAP;AACAS,QAAAA,GAAG;AACF,OALD;AAMD;;AAEC,UAAMC,aAAa,GAAG,MAAM;AAC1B;AACA,YAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYb,IAAZ,EAAkBc,GAAlB,CAAuBC,CAAD,IAAOf,IAAI,CAACe,CAAD,CAAjC,CAAnB;AAEA,YAAMC,WAAW,GAAGL,UAAU,CAACM,IAAX,CAAgB,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAC1C;AACA,eAAOA,CAAC,CAACC,UAAF,GAAeF,CAAC,CAACE,UAAxB;AACD,OAHmB,CAApB;AAKD,KATD;AAWH,GArBQ,EAqBP,CAACpB,IAAD,CArBO,CAAT,CANoB,CA6BpB;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,gBAAd;AAAA,gBACCA,IAAI,CAACc,GAAL,CAAUO,OAAD;AAAA;AACN;AACD,cAAC,KAAD;AAAoC,QAAA,OAAO,EAAEA;AAA7C,SAAYA,OAAO,CAACC,IAAR,CAAa,QAAb,CAAZ;AAAA;AAAA;AAAA;AAAA,cAFF;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYH,CA1CD;;GAAMvB,S;;KAAAA,S;AA4CN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cards from './Cards';\n\nconst Countries = () => {\n    const [data,setData] = useState([]);\n    const [sortedData,setSortedData] = useState([])\n    const [playOnce,setPlayOnce] = useState(true);\n\n    // fetch Data from Api request countries\n    useEffect(()=>{\n      if(playOnce){\n        axios\n        .get('https://restcountries.com/v3.1/all')\n        .then((res) =>  {\n        setData(res.data)\n        set\n        });\n      }\n\n        const sortedCountry = () => {\n          // Transform an array in object from data Api\n          const countryObj = Object.keys[data].map((i) => data[i]);\n\n          const sortedArray = countryObj.sort((a,b) =>{\n            // tries décroissant\n            return b.population - a.population\n          });\n         \n        };\n        \n    },[data]);\n   \n    // NB child's components inherited from parent's component \n    return (\n      <div className=\"data-container\">\n        <ul className=\"countries-list\">\n        {data.map((country) => (\n            // left country transfer to country's Card value right (props cards)\n           <Cards key={country.name[\"common\"]} country={country}/>\n           \n        ))}\n        </ul>\n      </div>\n            \n    );\n};\n\nexport default Countries;"]},"metadata":{},"sourceType":"module"}